"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{var t,e;const s=cityssm.escapeHTML(document.querySelector("#ticket--ticketId").value),a=document.querySelector("#is-status-panel");let n=exports.ticketStatusLog;function i(){const t=a.querySelectorAll(".panel-block");for(const e of t)e.remove()}function l(){cityssm.postJSON("/tickets/doResolveTicket",{ticketId:s},t=>{t.success&&(window.location.href=`/tickets/${s}`)})}function o(t){t.preventDefault(),bulmaJS.confirm({title:"Mark Ticket as Resolved",message:"Once resolved, you will no longer be able to make changes to the ticket.",contextualColorName:"info",okButton:{text:"Yes, Resolve Ticket",callbackFunction:l}})}function u(t){const e=t.currentTarget.dataset.statusIndex;bulmaJS.confirm({title:"Delete Status",message:"Are you sure you want to delete this status?",contextualColorName:"warning",okButton:{text:"Yes, Delete Status",callbackFunction:function(){cityssm.postJSON("/tickets/doDeleteStatus",{ticketId:s,statusIndex:e},t=>{t.success&&r()})}}})}function d(t){var e;let a;t.preventDefault();const i=Number.parseInt(null!==(e=t.currentTarget.dataset.index)&&void 0!==e?e:"-1",10),l=n[i];function o(t){t.preventDefault(),cityssm.postJSON("/tickets/doUpdateStatus",t.currentTarget,t=>{t.success&&(a(),r())})}function u(t){const e=pts.getTicketStatus(t.currentTarget.value),s=document.querySelector("#editStatus--statusField");s.value="";const a=s.closest(".field");(null==e?void 0:e.statusField)?(a.querySelector("label").textContent=e.statusField.fieldLabel,a.classList.remove("is-hidden")):a.classList.add("is-hidden");const n=document.querySelector("#editStatus--statusField2");n.value="";const i=n.closest(".field");(null==e?void 0:e.statusField2)?(i.querySelector("label").textContent=e.statusField2.fieldLabel,i.classList.remove("is-hidden")):i.classList.add("is-hidden")}cityssm.openHtmlModal("ticket-editStatus",{onshow(t){var e,a,n,i,d,c;document.querySelector("#editStatus--ticketId").value=s,document.querySelector("#editStatus--statusIndex").value=l.statusIndex.toString(),document.querySelector("#editStatus--statusField").value=null!==(e=l.statusField)&&void 0!==e?e:"",document.querySelector("#editStatus--statusField2").value=null!==(a=l.statusField2)&&void 0!==a?a:"",document.querySelector("#editStatus--statusNote").value=null!==(n=l.statusNote)&&void 0!==n?n:"";const r=document.querySelector("#editStatus--statusDateString");r.value=null!==(i=l.statusDateString)&&void 0!==i?i:"",r.setAttribute("max",cityssm.dateToString(new Date)),document.querySelector("#editStatus--statusTimeString").value=null!==(d=l.statusTimeString)&&void 0!==d?d:"",pts.getDefaultConfigProperty("parkingTicketStatuses",t=>{var e,s,a;let n=!1;const i=document.querySelector("#editStatus--statusKey");for(const a of t)if((a.isUserSettable||a.statusKey===l.statusKey)&&(i.insertAdjacentHTML("beforeend",`<option value="${a.statusKey}">${a.status}</option>`),a.statusKey===l.statusKey)){if(n=!0,a.statusField){const t=null===(e=document.querySelector("#editStatus--statusField"))||void 0===e?void 0:e.closest(".field");t.querySelector("label").textContent=a.statusField.fieldLabel,t.classList.remove("is-hidden")}if(a.statusField2){const t=null===(s=document.querySelector("#editStatus--statusField2"))||void 0===s?void 0:s.closest(".field");t.querySelector("label").textContent=a.statusField2.fieldLabel,t.classList.remove("is-hidden")}}n||i.insertAdjacentHTML("beforeend",`<option value="${l.statusKey}">${l.statusKey}</option>`),i.value=null!==(a=l.statusKey)&&void 0!==a?a:"",i.addEventListener("change",u)}),null===(c=t.querySelector("form"))||void 0===c||c.addEventListener("submit",o)},onshown(t,e){a=e}})}function c(){var t,e,s,l,c;if(i(),0===n.length)return void a.insertAdjacentHTML("beforeend",'<div class="panel-block is-block">\n          <div class="message is-info">\n          <p class="message-body">There are no statuses associated with this ticket.</p>\n          </div>\n          </div>');for(const e of n){const s=pts.getTicketStatus(null!==(t=e.statusKey)&&void 0!==t?t:""),n=document.createElement("div");n.className="panel-block is-block",n.innerHTML='<div class="columns"><div class="column"><div class="level mb-1"><div class="level-left"><strong>'+(s?s.status:e.statusKey)+'</strong></div><div class="level-right">'+e.statusDateString+"</div></div>"+(e.statusField&&""!==e.statusField?`<p class="is-size-7">\n                <strong>${(null==s?void 0:s.statusField)?s.statusField.fieldLabel:""}:</strong> ${e.statusField}</p>`:"")+(e.statusField2&&""!==e.statusField2?`<p class="is-size-7">\n                <strong>\n                ${(null==s?void 0:s.statusField2)?s.statusField2.fieldLabel:""}:</strong> ${e.statusField2}\n                </p>`:"")+'<p class="has-newline-chars is-size-7">'+e.statusNote+"</p></div></div>",a.append(n)}const r=n[0];if(r.canUpdate){const t=null===(e=a.querySelector(".panel-block"))||void 0===e?void 0:e.querySelector(".columns");t.insertAdjacentHTML("beforeend",`<div class="column is-narrow">\n          <div class="buttons is-right has-addons">\n            <button class="button is-small is-edit-status-button" data-tooltip="Edit Status" data-index="0" type="button">\n              <span class="icon is-small"><i class="fas fa-pencil-alt" aria-hidden="true"></i></span>\n              <span>Edit</span>\n            </button>\n            <button class="button is-small has-text-danger is-delete-status-button" data-tooltip="Delete Status" data-status-index="${r.statusIndex.toString()}" type="button">\n              <i class="fas fa-trash" aria-hidden="true"></i>\n              <span class="sr-only">Delete</span>\n            </button>\n          </div>\n          </div>`),null===(s=t.querySelector(".is-edit-status-button"))||void 0===s||s.addEventListener("click",d),null===(l=t.querySelector(".is-delete-status-button"))||void 0===l||l.addEventListener("click",u)}const v=pts.getTicketStatus(r.statusKey);if(null==v?void 0:v.isFinalStatus){const t=document.createElement("div");t.className="panel-block is-block",t.innerHTML='<div class="message is-info is-clearfix">\n        <div class="message-body">\n          <div class="columns">\n            <div class="column">\n              <strong>This ticket is able to be marked as resolved.</strong>\n            </div>\n            <div class="column is-narrow has-text-right align-self-flex-end">\n              <button class="button is-info" data-cy="resolve" type="button">\n                <span class="icon is-small"><i class="fas fa-check" aria-hidden="true"></i></span>\n                <span>Resolve Ticket</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        </div>',null===(c=t.querySelector("button"))||void 0===c||c.addEventListener("click",o),a.prepend(t)}}function r(){i(),a.insertAdjacentHTML("beforeend",'<div class="panel-block is-block">\n        <p class="has-text-centered has-text-grey-lighter">\n          <i class="fas fa-2x fa-circle-notch fa-spin" aria-hidden="true"></i><br />\n          <em>Loading statuses...</em>\n        </p>\n        </div>'),cityssm.postJSON("/tickets/doGetStatuses",{ticketId:s},t=>{n=t,c()})}delete exports.ticketStatusLog,null===(t=document.querySelector("#is-add-status-button"))||void 0===t||t.addEventListener("click",t=>{let e;function a(t){t.preventDefault();const a=document.querySelector("#addStatus--resolveTicket").checked;cityssm.postJSON("/tickets/doAddStatus",t.currentTarget,t=>{t.success&&(e(),a?window.location.href=`/tickets/${s}`:r())})}function n(t){var e,s;const a=pts.getTicketStatus(t.currentTarget.value),n=document.querySelector("#addStatus--statusField");n.value="";const i=n.closest(".field");(null==a?void 0:a.statusField)?(i.querySelector("label").textContent=a.statusField.fieldLabel,i.classList.remove("is-hidden")):i.classList.add("is-hidden");const l=document.querySelector("#addStatus--statusField2");l.value="";const o=l.closest(".field");(null==a?void 0:a.statusField2)?(o.querySelector("label").textContent=a.statusField2.fieldLabel,o.classList.remove("is-hidden")):o.classList.add("is-hidden");const u=document.querySelector("#addStatus--resolveTicket");u.checked=!1,(null==a?void 0:a.isFinalStatus)?null===(e=u.closest(".field"))||void 0===e||e.classList.remove("is-hidden"):null===(s=u.closest(".field"))||void 0===s||s.classList.add("is-hidden")}t.preventDefault(),cityssm.openHtmlModal("ticket-addStatus",{onshow(t){var e;document.querySelector("#addStatus--ticketId").value=s,pts.getDefaultConfigProperty("parkingTicketStatuses",t=>{const e=document.querySelector("#addStatus--statusKey");for(const s of t)s.isUserSettable&&e.insertAdjacentHTML("beforeend",`<option value="${s.statusKey}">${s.status}</option>`);e.addEventListener("change",n)}),null===(e=t.querySelector("form"))||void 0===e||e.addEventListener("submit",a)},onshown(t,s){e=s}})}),null===(e=document.querySelector("#is-add-paid-status-button"))||void 0===e||e.addEventListener("click",t=>{let e;function a(t){t.preventDefault();const a=document.querySelector("#addPaidStatus--resolveTicket").checked;cityssm.postJSON("/tickets/doAddStatus",t.currentTarget,t=>{t.success&&(e(),a?window.location.href=`/tickets/${s}`:r())})}t.preventDefault(),cityssm.openHtmlModal("ticket-addStatusPaid",{onshow(t){var e;document.querySelector("#addPaidStatus--ticketId").value=s;const n=document.querySelector("#addPaidStatus--statusField"),i=document.querySelector("#ticket--offenceAmount").value,l=document.querySelector("#ticket--issueDateString").value,o=document.querySelector("#ticket--discountDays").value;if(""===l||""===o)n.value=i;else{const t=cityssm.dateToString(new Date),e=cityssm.dateStringDifferenceInDays(l,t);n.value=e<=Number.parseInt(o,10)?document.querySelector("#ticket--discountOffenceAmount").value:i}null===(e=t.querySelector("form"))||void 0===e||e.addEventListener("submit",a)},onshown(t,s){e=s}})}),pts.loadDefaultConfigProperties(c)})();