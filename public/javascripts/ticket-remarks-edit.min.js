"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{var e;const t=document.querySelector("#ticket--ticketId").value,r=document.querySelector("#is-remark-panel");let a=exports.ticketRemarks;function s(){const e=r.querySelectorAll(".panel-block");for(const t of e)t.remove()}function n(e){const r=e.currentTarget.dataset.remarkIndex;cityssm.confirmModal("Delete Remark?","Are you sure you want to delete this remark?","Yes, Delete","warning",()=>{cityssm.postJSON("/tickets/doDeleteRemark",{ticketId:t,remarkIndex:r},e=>{e.success&&o()})})}function i(e){let r;e.preventDefault();const s=Number.parseInt(e.currentTarget.dataset.index,10),n=a[s];function i(e){e.preventDefault(),cityssm.postJSON("/tickets/doUpdateRemark",e.currentTarget,e=>{e.success&&(r(),o())})}cityssm.openHtmlModal("ticket-editRemark",{onshow(e){var r;document.querySelector("#editRemark--ticketId").value=t,document.querySelector("#editRemark--remarkIndex").value=n.remarkIndex.toString(),document.querySelector("#editRemark--remark").value=n.remark,document.querySelector("#editRemark--remarkDateString").value=n.remarkDateString,document.querySelector("#editRemark--remarkTimeString").value=n.remarkTimeString,null===(r=e.querySelector("form"))||void 0===r||r.addEventListener("submit",i)},onshown(e,t){r=t}})}function c(){var e,t;if(s(),0!==a.length)for(const[s,c]of a.entries()){const a=document.createElement("div");a.className="panel-block is-block",a.innerHTML='<div class="columns"><div class="column"><p class="has-newline-chars">'+cityssm.escapeHTML(c.remark)+'</p><p class="is-size-7">'+(c.recordCreate_timeMillis===c.recordUpdate_timeMillis?"":'<i class="fas fa-pencil-alt" aria-hidden="true"></i> ')+c.recordUpdate_userName+" - "+c.remarkDateString+" "+c.remarkTimeString+"</p></div>"+(c.canUpdate?'<div class="column is-narrow"><div class="buttons is-right has-addons"><button class="button is-small is-edit-remark-button" data-cy="edit-remark" data-tooltip="Edit Remark" data-index="'+s.toString()+'" type="button"><span class="icon is-small"><i class="fas fa-pencil-alt" aria-hidden="true"></i></span> <span>Edit</span></button><button class="button is-small has-text-danger is-delete-remark-button" data-cy="delete-remark" data-tooltip="Delete Remark" data-remark-index="'+c.remarkIndex.toString()+'" type="button"><i class="fas fa-trash" aria-hidden="true"></i><span class="sr-only">Delete</span></button></div></div>':"")+"</div>",c.canUpdate&&(null===(e=a.querySelector(".is-edit-remark-button"))||void 0===e||e.addEventListener("click",i),null===(t=a.querySelector(".is-delete-remark-button"))||void 0===t||t.addEventListener("click",n)),r.append(a)}else r.insertAdjacentHTML("beforeend",'<div class="panel-block is-block">\n          <div class="message is-info"><p class="message-body">There are no remarks associated with this ticket.</p></div>\n          </div>')}function o(){s(),r.insertAdjacentHTML("beforeend",'<div class="panel-block is-block">\n        <p class="has-text-centered has-text-grey-lighter">\n        <i class="fas fa-2x fa-circle-notch fa-spin" aria-hidden="true"></i><br />\n        <em>Loading remarks...</em>\n        </p>\n        </div>'),cityssm.postJSON("/tickets/doGetRemarks",{ticketId:t},e=>{a=e,c()})}delete exports.ticketRemarks,null===(e=document.querySelector("#is-add-remark-button"))||void 0===e||e.addEventListener("click",e=>{let r;e.preventDefault();const a=e=>{e.preventDefault(),cityssm.postJSON("/tickets/doAddRemark",e.currentTarget,e=>{e.success&&(r(),o())})};cityssm.openHtmlModal("ticket-addRemark",{onshow(e){var r;document.querySelector("#addRemark--ticketId").value=t,null===(r=e.querySelector("form"))||void 0===r||r.addEventListener("submit",a)},onshown(e,t){r=t}})}),c()})();